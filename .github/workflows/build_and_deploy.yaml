name: Deploy backend service

run-name: Deploying backend services on behalf of ${{ github.actor }}

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            catalog: apps/catalog-service/**
            checkout: apps/checkout-service/**
            orders: apps/orders-service/**
            wishlist: apps/wishlist-service/**

#   dependencies:
#     needs: changes
#     # Only run this step if there are any package affected
#     if: needs.changes.outputs.packages != '[]'
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - uses: actions/download-artifact@v3
#         with:
#           name: workspace-${{ github.sha }}

#       - name: Uncompress workspace
#         run: |
#           tar -xvzf workspace-${{ github.sha }}.tar.gz
#           rm workspace-${{ github.sha }}.tar.gz

#       - name: Install dependencies
#         run: npm ci

#       - name: Compress workspace
#         run: tar -cvzf workspace-${{ github.sha }}.tar.gz ${{ github.workspace }}

#       - uses: actions/upload-artifact@v3
#         with:
#           name: workspace-${{ github.sha }}
#           path: workspace-${{ github.sha }}.tar.gz
#           retention-days: 1

  build_and_deploy:
    needs: changes
    if: needs.changes.outputs.packages != '[]'
    # Build an array with the affected packages
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "üöÄ Deploying service '${{ matrix.package }}'."

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        continue-on-error: true
        run: npm ci

    #   - uses: actions/download-artifact@v3
    #     with:
    #       name: workspace-${{ github.sha }}

    #   - name: Uncompress workspace
    #     run: |
    #       tar -xvzf workspace-${{ github.sha }}.tar.gz
    #       rm workspace-${{ github.sha }}.tar.gz

      - run: ls -R


    #   - name: Build service
    #     run: npx nx build ${{ matrix.package }}-service

    #   - name: Build docker image
    #     run: docker build -f ./apps/${{ matrix.package }}-service/Dockerfile . -t paquitosoft/ecommerce_${{ matrix.package }}-service

    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v2
    # 	with:
    # 	  username: ${{ secrets.DOCKER_USERNAME }}
    # 	  password: ${{ secrets.DOCKER_PASSWORD }}

    #   - name: Deploy image to Docker Hub
    # 	run: docker push paquitosoft/ecommerce_${{ matrix.package }}-service:latest
        # run: |
        #     docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        #     docker push paquitosoft/ecommerce_${{ matrix.package }}-service:latest


#   build:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#         - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#         - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#         - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

#         - uses: actions/checkout@v3

#         - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#         - run: echo "üñ•Ô∏è The workflow is now ready to build your code on the runner."
#         - name: List files in the repository
#           run: |
#             ls ${{ github.workspace }}
#         - run: echo "üçè This job's status is ${{ job.status }}."

#         - uses: actions/setup-node@v3
#           with:
#             node-version: 16

#         - name: Install dependencies
#           run: npm ci

#         - name: Build service
#           run: npx nx build checkout-service

#         - name: Build docker image
#           run: docker build -f ./apps/checkout-service/Dockerfile . -t paquitosoft/ecommerce_checkout-service

#         - name: Deploy image to Docker Hub
#           run: |
#             docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#             docker push paquitosoft/ecommerce_checkout-service:latest
